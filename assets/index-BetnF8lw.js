import{_ as r,c as p,o,e as t,a as n,h as i,f as c,d as a}from"./index-YkOm6AK1.js";const l={},m={class:"fu typescript"};function u(s,d){const e=c("FuQuote");return o(),p("div",m,[d[0]||(d[0]=t("h1",null,"TypeScript 5",-1)),d[1]||(d[1]=t("h2",null,"一、项目初始化 & 基础配置",-1)),d[2]||(d[2]=t("h3",null,"1.1 项目初始化",-1)),d[3]||(d[3]=t("h4",null,"介绍TypeScript项目与初始化过程",-1)),n(e,{content:"初始化TypeScript项目是开始使用TypeScript开发的第一步。这个过程通常涉及安装必要的工具（Node.js、npm/yarn/pnpm）、安装TypeScript编译器、创建项目结构以及配置项目的编译选项。一个良好的项目开端能确保后续开发的顺畅。"}),d[4]||(d[4]=t("h4",null,"安装Node.js和npm、pnpm",-1)),n(e,{content:"TypeScript的开发和编译依赖于Node.js环境。Node.js是一个JavaScript运行时环境，而npm（Node Package Manager）是其默认的包管理工具，用于安装和管理项目所需的各种库和工具。pnpm与npm功能类型，但更节省磁盘、下载速度快。"}),d[5]||(d[5]=i("<dl><dt>1.1 项目初始化</dt><dd>介绍TypeScript项目与初始化过程</dd><dd>安装Node.js和npm</dd><dd>使用PNPM初始化项目</dd><dd>安装TypeScript</dd><dt>1.2 配置tsconfig.json</dt><dd>生成tsconfig.json</dd><dd>关键配置项</dd><dt>1.3 VS Code配置与插件</dt><dd>安装与配置 VS Code插件</dd><dd>启用VS Code中的TypeScript支持</dd><dd>自动补全与类型推导</dd></dl><h2>二、TypeScript语言基础 &amp; 进阶</h2>",2))])}const S=r(l,[["render",u]]),y={class:"typescript"},T=a({__name:"index",setup(s){return(d,e)=>(o(),p("div",y,[n(S)]))}});export{T as default};
